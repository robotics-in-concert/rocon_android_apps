/*
 * Copyright (C) 2013 Daniel Stonier
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

//buildscript {
//    apply from: "https://github.com/rosjava/android_core/raw/indigo/buildscript.gradle"
//}

buildscript {
    //apply from: "https://github.com/rosjava/android_core/raw/indigo/buildscript.gradle"
    //apply from: "https://github.com/rosjava/rosjava_bootstrap/raw/indigo/buildscript.gradle"
    String rosMavenPath = System.getenv("ROS_MAVEN_PATH")
    String rosMavenRepository = System.getenv("ROS_MAVEN_REPOSITORY")
    repositories {
        if (rosMavenPath != null) {
            rosMavenPath.tokenize(":").each { path ->
                maven {
                    // We can't use uri() here because we aren't running inside something
                    // that implements the Script interface.
                    url "file:${path}"
                }
            }
        }
        maven {
            url "http://repository.springsource.com/maven/bundles/release"
        }
        maven {
            url "http://repository.springsource.com/maven/bundles/external"
        }
        if (rosMavenRepository != null) {
            maven {
                url rosMavenRepository
            }
        }
        //maven {
        //    url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
        //}
        mavenCentral()
    }
    dependencies {
        classpath "org.ros.rosjava_bootstrap:gradle_plugins:[0.2,0.3)"
    }

    dependencies {
        classpath "com.android.tools.build:gradle:1.0.+"
    }
}

apply plugin: 'catkin'

allprojects {

    repositories {
        mavenCentral()
        maven {
            url "http://central.maven.org/maven2/"
        }
        maven {
            url "https://repo.jfrog.org/artifactory/libs-releases/"
        }
        maven {
            url "https://repo.maven.apache.org/maven2/"
        }
        maven {
            url "https://repo1.maven.org/maven2/"
        }
    }

    group 'com.github.robotics_in_concert.rocon_android_apps'
    version = project.catkin.pkg.version
}

subprojects {
    apply plugin: 'ros-android'
    afterEvaluate { project ->
        android {
            packagingOptions {
                /* https://github.com/rosjava/android_core/issues/194 */
                exclude 'META-INF/LICENSE.txt'
                exclude 'META-INF/NOTICE.txt'
                exclude 'META-INF/gradle-plugins/catkin.properties'
                exclude 'META-INF/gradle-plugins/ros.properties'
                exclude 'META-INF/gradle-plugins/ros-android.properties'
                exclude 'META-INF/gradle-plugins/ros-java.properties'
            }
        }
    }
}

defaultTasks 'assembleRelease'
